
<h2 class="sectionedit1" id="nano-pc">Nano-PC</h2>
<div class="level2">

<p>
Refer: <a href="http://wiki.friendlyarm.com/wiki/index.php/NanoPC-T3" class="urlextern" title="http://wiki.friendlyarm.com/wiki/index.php/NanoPC-T3" rel="nofollow">http://wiki.friendlyarm.com/wiki/index.php/NanoPC-T3</a>
</p>
<hr />

</div>
<!-- EDIT1 SECTION "Nano-PC" [1-88] -->
<h3 class="sectionedit2" id="specifications">Specifications</h3>
<div class="level3">
<ul>
<li class="level1"><div class="li"> SoC: Samsung S5P6818 Octa-Core Cortex-A53, 400M Hz - 1.4G Hz</div>
</li>
<li class="level1"><div class="li"> Power Management Unit: AXP228 PMU, it supports software power-off and wake-up.</div>
</li>
<li class="level1"><div class="li"> System Memory: 1GB/2GB 32bit DDR3 RAM</div>
</li>
<li class="level1"><div class="li"> Storage: 1 x SD Card Socket</div>
</li>
<li class="level1"><div class="li"> Ethernet: Gbit Ethernet(RTL8211E)</div>
</li>
<li class="level1"><div class="li"> WiFi: 802.11b/g/n</div>
</li>
<li class="level1"><div class="li"> Bluetooth: 4.0 dual mode</div>
</li>
<li class="level1"><div class="li"> Antenna: Porcelain Antenna IPX Interface</div>
</li>
<li class="level1"><div class="li"> eMMC: 8GB <a href="/wiki/lib/exe/detail.php?id=introduction&amp;media=11_23_12.png" class="media" title="11_23_12.png"><img src="/wiki/lib/exe/fetch.php?w=400&amp;tok=758924&amp;media=11_23_12.png" class="mediaright" alt="" width="400" /></a></div>
</li>
<li class="level1"><div class="li"> Video Input: DVP Camera/MIPI-CSI (two camera interfaces)</div>
</li>
<li class="level1"><div class="li"> Video Output: HDMI Type-A / LVDS / Parallel RGB-LCD / MIPI-DSI (four video output interfaces)</div>
</li>
<li class="level1"><div class="li"> Audio: 3.5 mm audio jack / via HDMI</div>
</li>
<li class="level1"><div class="li"> Microphone: onboard Microphone</div>
</li>
<li class="level1"><div class="li"> USB Host: 4 x USB 2.0 Host, two type A ports and two 2.54 mm pitch pin-headers</div>
</li>
<li class="level1"><div class="li"> MicroUSB: 1 x MicroUSB 2.0 Client, Type A</div>
</li>
<li class="level1"><div class="li"> LCD Interface: 0.5mm pitch 45 pin FPC seat, full color RGB 8-8-8</div>
</li>
<li class="level1"><div class="li"> HDMI: 1.4A Type A, 1080P</div>
</li>
<li class="level1"><div class="li"> DVP Camera: 0.5mm pitch 24 pin FPC seat</div>
</li>
<li class="level1"><div class="li"> GPIO: 2.54 mm pitch 30 pin-header</div>
</li>
<li class="level1"><div class="li"> Serial Debug Port: 2.54mm pitch 4-pin-header</div>
</li>
<li class="level1"><div class="li"> User Key: K1 (power), Reset</div>
</li>
<li class="level1"><div class="li"> LED: 1 x power LED and 2 x GPIO LED</div>
</li>
<li class="level1"><div class="li"> Other Resources: CPU’s internal TMU</div>
</li>
<li class="level1"><div class="li"> RTC Battery: RTC Battery Seat</div>
</li>
<li class="level1"><div class="li"> Heat Sink: 1 x Heat Sink with mounting holes</div>
</li>
<li class="level1"><div class="li"> Power: DC 5V/2A</div>
</li>
<li class="level1"><div class="li"> PCB: Six Layer</div>
</li>
<li class="level1"><div class="li"> Dimension: 100 mm x 60 mm</div>
</li>
<li class="level1"><div class="li"> <abbr title="Operating System">OS</abbr>/Software: uboot, Android and Debian</div>
</li>
</ul>

</div>
<!-- EDIT2 SECTION "Specifications" [89-1410] -->
<h3 class="sectionedit3" id="install_cross_compiler">Install Cross Compiler</h3>
<div class="level3">
<ul>
<li class="level1"><div class="li"> Download the compiler package:</div>
</li>
</ul>
<pre class="code">git clone https://github.com/friendlyarm/prebuilts.git
sudo mkdir -p ./toolchain
sudo tar xf prebuilts/gcc-x64/arm-cortexa9-linux-gnueabihf-4.9.3.tar.xz -C ./toolchain/</pre>
<ul>
<li class="level1"><div class="li"> Then add the compiler&#039;s directory to “PATH” by appending the following lines in “~/.bashrc”:</div>
</li>
</ul>
<pre class="code">export PATH=/opt/FriendlyARM/toolchain/4.9.3/bin:$PATH
export GCC_COLORS=auto</pre>
<ul>
<li class="level1"><div class="li"> Execute “~/.bashrc” to make the changes take effect. Note that there is a space after the first “.”:</div>
</li>
</ul>
<pre class="code">. ~/.bashrc</pre>
<ul>
<li class="level1"><div class="li"> This compiler is a 64-bit one therefore it cannot be run on a 32-bit Linux machine. After the compiler is installed you can verify it by running the following commands:</div>
</li>
</ul>
<pre class="code">arm-linux-gcc -v
Using built-in specs.
COLLECT_GCC=arm-linux-gcc
COLLECT_LTO_WRAPPER=/opt/FriendlyARM/toolchain/4.9.3/libexec/gcc/arm-cortexa9-linux-gnueabihf/4.9.3/lto-wrapper
Target: arm-cortexa9-linux-gnueabihf
Configured with: /work/toolchain/build/src/gcc-4.9.3/configure --build=x86_64-build_pc-linux-gnu
--host=x86_64-build_pc-linux-gnu --target=arm-cortexa9-linux-gnueabihf --prefix=/opt/FriendlyARM/toolchain/4.9.3
--with-sysroot=/opt/FriendlyARM/toolchain/4.9.3/arm-cortexa9-linux-gnueabihf/sys-root --enable-languages=c,c++
--with-arch=armv7-a --with-tune=cortex-a9 --with-fpu=vfpv3 --with-float=hard
...
Thread model: posix</pre>
<pre class="code">gcc version 4.9.3 (ctng-1.21.0-229g-FA)</pre>

<p>
—-
</p>
<pre class="code">#define FASTBOOT_PARTS_DEFAULT          \
	&quot;2ndboot:2nd:0x200,0x7A00;&quot;     \
	&quot;bootloader:boot:0x8000,0x70000;&quot;       \
	&quot;boot:ext4:0x00100000,0x04000000;&quot;              \
	&quot;system:ext4:0x04100000,0x02F200000;&quot;   \
	&quot;cache:ext4:0x33300000,0x1AC00000;&quot;             \
	&quot;misc:emmc:0x4E000000,0x00800000;&quot;              \
	&quot;recovery:emmc:0x4E900000,0x01600000;&quot;  \
	&quot;userdata:ext4:0x50000000,0x0;&quot;
#endif</pre>

</div>
<!-- EDIT3 SECTION "Install Cross Compiler" [1411-] -->